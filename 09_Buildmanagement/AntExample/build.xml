<project name="ESA9-Buildmanagement" default="jar" basedir=".">
    <description>
      ESA 9 - Buildmanagement
    </description>

    <property name="src.dir" value="src" />
    <property name="build.dir" value="build" />
    <property name="classes.dir" value="${build.dir}/classes" />
    <property name="jar.dir" value="${build.dir}/jar" />
    <property name="main-package" value="com.bogusmachine.softwaretechnik.ant" />
    <property name="main-class" value="${main-package}.Cow" />
    <property name="lib.dir" value="lib" />
    <property name="doc.dir" value="javadoc" />

    <path id="application" location="${jar.dir}/${ant.project.name}.jar" />
    <path id="classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar" />
    </path>

    <target name="clean" description="clean up">
        <delete dir="build" />
        <delete dir="docs" />
    </target>

    <target name="compile" depends="get" description="compile the source">
        <mkdir dir="${classes.dir}" />
        <javac includeantruntime="false" srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath" />
    </target>

    <target name="jar" depends="compile" description="generate the jar">
        <mkdir dir="${jar.dir}" />
        <jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="${main-class}" />
            </manifest>
        </jar>
    </target>

    <target name="run" depends="jar">
        <java fork="true" classname="${main-class}">
            <classpath>
                <path refid="classpath" />
                <path refid="application" />
            </classpath>
        </java>
    </target>

    <target name="test" depends="jar" description="run the tests">
        <junit printsummary="yes">
            <classpath>
                <path refid="classpath" />
                <path refid="application" />
            </classpath>

            <batchtest fork="yes">
                <fileset dir="${src.dir}" includes="**/*Test.java" />
            </batchtest>
        </junit>
    </target>

    <target name="doc" description="generate java doc">
        <javadoc classpathref="classpath" packagenames="${main-package}.*" sourcepath="src" defaultexcludes="yes" destdir="${doc.dir}" author="true" version="true" use="true" windowtitle="${ant.project.name}">
            <doctitle>
                <![CDATA[<h1>Test</h1>]]>
            </doctitle>
            <bottom>
                <![CDATA[<i>Copyright &#169; 2020 bogusmachine.com. All Rights Reserved.</i>]]>
            </bottom>
        </javadoc>
    </target>

    <target name="get" description="download external libraries to lib.dir" depends="libs.check" unless="libs.exist">
        <mkdir dir="lib" />
        <get src="https://search.maven.org/remotecontent?filepath=junit/junit/4.13/junit-4.13.jar" dest="${lib.dir}/junit-4.13.jar" verbose="true" usetimestamp="true" />
        <get src="https://search.maven.org/remotecontent?filepath=org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar" dest="${lib.dir}/hamcrest-core-1.3.jar" verbose="true" usetimestamp="true" />
    </target>

    <target name="libs.check">
        <condition property="libs.exist">
            <available file="${lib.dir}" type="dir" />
        </condition>
    </target>
</project>